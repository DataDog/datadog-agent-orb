version: 2.1

orbs:
  # Replace this with your own!
  agent: datadog/agent@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

# Pipeline Parameters
## These parameters are used internally by orb-tools. Skip to the Jobs section.
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

jobs:
  # Define one or more jobs which will utilize your orb's commands and parameters to validate your changes.
  integration-test-1:
    docker:
      - image: cimg/base:stable
    steps:
      # Check that we can start and stop the agent
      - agent/setup:
          site: datad0g.com
      - agent/stop

  # Test in ubuntu
  ubuntu-integration-18_04:
    docker:
      - image: ubuntu:18.04
    steps:
      - run: apt-get update -y
      - run: apt-get -y install curl
      - agent/setup:
          site: datad0g.com
      - agent/stop
  ubuntu-integration-20_04:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: apt-get update -y
      - run: apt-get -y install curl
      - agent/setup:
          site: datad0g.com
      - agent/stop
  ubuntu-integration-21_04:
    docker:
      - image: ubuntu:21.04
    steps:
      - run: apt-get update -y
      - run: apt-get -y install curl
      - agent/setup:
          site: datad0g.com
      - agent/stop

  centos-8:
    docker:
      - image: centos:8
    steps:
      - run: yum -y install curl findutils initscripts
      - agent/setup:
          site: datad0g.com
      - agent/stop
  centos-7:
    docker:
      - image: centos:7
    steps:
      - run: yum -y install curl findutils initscripts
      - agent/setup:
          site: datad0g.com
      - agent/stop

  # TODO currently alpine is not supported
  # Test in alpine
  # alpine-3_14:
  #   docker:
  #     - image: alpine:3.14
  #   steps:
  #     - run: apk --no-cache add curl bash sudo
  #     - agent/setup:
  #         site: datad0g.com
  #     - agent/stop

  # Test in debian
  debian-buster:
    docker:
      - image: debian:10.10-slim
    steps:
      - run: apt-get update -y
      - run: apt-get -y install curl
      - agent/setup:
          site: datad0g.com
      - agent/stop
  debian-bullseye:
    docker:
      - image: debian:11-slim
    steps:
      - run: apt-get update -y
      - run: apt-get -y install curl
      - agent/setup:
          site: datad0g.com
      - agent/stop

  fedora-34:
    docker:
      - image: fedora:34
    steps:
      - run: yum -y install curl findutils initscripts
      - agent/setup:
          site: datad0g.com
      - agent/stop
  fedora-33:
    docker:
      - image: fedora:33
    steps:
      - run: yum -y install curl findutils initscripts
      - agent/setup:
          site: datad0g.com
      - agent/stop

workflows:
  # Prior to producing a development orb (which requires credentials) basic validation, linting, and even unit testing can be performed.
  # This workflow will run on every commit
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint # Lint Yaml files
      - orb-tools/pack # Pack orb source
      - shellcheck/check:
          dir: ./src/scripts
          exclude: SC2148
      # optional: Run BATS tests against your scripts
      - bats/run:
          path: ./src/tests
      # Publish development version(s) of the orb.
      - orb-tools/publish-dev:
          orb-name: datadog/agent
          context: orb-publishing # A restricted context containing your private publishing credentials. Will only execute if approved by an authorized user.
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - bats/run
            - shellcheck/check
      # Trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  # This `integration-test_deploy` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # Run any integration tests defined within the `jobs` key.
      - integration-test-1
      - ubuntu-integration-18_04
      - ubuntu-integration-20_04
      - ubuntu-integration-21_04
      - centos-8
      - centos-7
      - fedora-34
      - fedora-33
      - debian-buster
      - debian-bullseye
      # Publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: datadog/agent
          context: orb-publishing
          add-pr-comment: true
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - integration-test-1
          filters:
            branches:
              only:
                - master
                - main
